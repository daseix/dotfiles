http://stackoverflow.com/questions/1276403/simple-vim-commands-you-wish-youd-known-earlier

" --- alternatives to esc
Ctrl+c
Ctrl+[


" --- open buffer in vertical split
:vert sb N


" --- scroll down both parts of a split window (toggle)
:set scrollbind!
:windo set scrollbind           (for all windows)


" --- reload .vimrc in vim without restart
:source ~/.vimrc

" --- do complicated search and replace easily
:set incsearch             " I have this in .vimrc
/my complicated regexp     " Highlighted as you enter characters
:%s//replace with this/    " You don't have to type it again


" --- edit locations
gi			switch to insertion mode with cursor at the location it was previously.
g;          Go to [count] older position in change list.
g,          Go to [count] newer cursor position in change list.

ctrl+o go backward
ctrl+i go forward (once you've gone backward, of course)


" --- change text inside brackets / parentheses / quotation marks/ tags (also with opposite symbol)
ci( [b], ci{ [B], ci<, ci", ci', ct
" delete the brackets / quotation marks as well
ca(, ca{, ...

" --- get selection back after operation
gv          reselect last selection

" --- reformat text
gq<range>	rewrap text/selection to textwidth, e.g. gqip -> rewrap paragraph under cursor
=<ranger>			reindent text/selection, e.g. =ip -> reindent paragraph under cursor


" --- switch buffers"
:b [any portion of a buffer name] to switch buffers by text
:bp\|bd #   go to previous buffer and delete current buffer


" --- sort a list of items in a file
:%!sort
or vim build-in:
:%sort


" --- vim file explorer
:e. 	:edit . 	at current working directory
:sp. 	:split . 	in split at current working directory
:vs. 	:vsplit . 	in vertical split at current working directory
:E 	    :Explore 	at directory of current file
:Sex 	:Sexplore 	in split at directory of current file
:Vex 	:Vexplore 	in vertical split at directory of current file
:saveas
Rename files with R or delete them with D. Pressing <F1> in the explorer will
give you an overview


" --- Folding
zR/zM      open/close all folds
zi      enable/disable all folds
zr/zm   open/close more folds

" --- omnicompletion
ctrl+x ctrl+o   open omicompletion system
ctrl+n/ctrl+p   navigate through list of possible completions


" --- Registers
Registers in Vim let you run actions or commands on text stored within them. To access a register,
you type "a before a command, where \a\ is the name of a register. 

"kyy    copy the current line into register k
"Kyy    append to a register by using a capital letter
"kp     paste register k
:reg    To access all currently defined registers type

"+      is a special register that refers to the Ctrl-XCV clipboard
"*      is the "mouse highlight" clipboard
"0      yank register. Yanking without assigning to a particular register will assign to the default
        AND 0 register
"1/2/.. last / forelast /.. deleted text
"_      is the /dev/null of registers (black hole register)

=       expression register. It can be used for creative macro mappings.
:inoremap  \d The current date <c-r>=system("date")<cr>



" --- cheat sheet
select                                   v
select row(s)                            SHIFT + v
select blocks (columns)                  CTRL  + v
indent selected text                     >
unindent selected text                   <
list buffers                             :ls
open buffer                              :bN (N = buffer number)
print                                    :hardcopy
open a file                              :e /path/to/file.txt
                                         :e C:\Path\To\File.txt
sort selected rows                       :sort
search for word under cursor             *
open file under cursor                   gf
  (absolute path or relative)
format selected code                     =
select contents of entire file           ggVG
convert selected text to uppercase       U
convert selected text to lowercase       u
invert case of selected text             ~
convert tabs to spaces                   :retab
start recording a macro                  qX (X = key to assign macro to)
stop recording a macro                   q
playback macro                           @X (X = key macro was assigned to)
replay previously played macro *         @@
auto-complete a word you are typing **   CTRL + n
bookmark current place in file           mX (X = key to assign bookmark to)
jump to bookmark                         `X (X = key bookmark was assigned to
                                             ` = back tick/tilde key)
show all bookmarks                       :marks
delete a bookmark                        :delm X (X = key bookmark to delete)
delete all bookmarks                     :delm!
split screen horizontally                :split
split screen vertically                  :vsplit
navigating split screens                 CTRL + w + j = move down a screen
                                         CTRL + w + k = move up a screen
                                         CTRL + w + h = move left a screen
                                         CTRL + w + l = move right a screen
close all other split screens            :only

*  - As with other commands in vi, you can playback a macro any number of times.
     The following command would playback the macro assigned to the key `w' 100
     times: 100@w
