[user]
    name = Daniel Seidel
    email = daniel.seidel@dlr.de

[color]
    diff = auto
    status = auto
    branch = auto
    ui = auto
    interactive = auto

[alias]
    st   = status -s
    sts  = status --ignore-submodules
    ci   = commit --verbose
    br   = branch --all
    co   = checkout
    df   = diff
    dc   = diff --cached
    undo = reset HEAD~
    last = log -1 HEAD
    who  = shortlog -s --
    ;slog = !git --no-pager log --format=oneline --abbrev-commit
    lg = log -n 20 --graph --pretty=format:'%C(yellow)%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative
    ;lg2 = log -n 20 --graph --pretty=tformat:'%C(yellow)%h%Creset %ai %C(green)%an%Creset %C(bold cyan)->%Creset%C(bold blue)%d%Creset %s' 
    lg2 = log -n 20 --graph --pretty=tformat:'%C(yellow)%h%C(green) %ai %C(blue)%an%Creset %C(bold cyan)->%Creset%C(bold blue)%d%Creset %s' 
    lg3  = log -n 20 --pretty=tformat:'%C(yellow)%h%Creset %ai %C(green)%an%Creset %C(bold cyan)->%Creset%C(bold blue)%d%Creset %s'
    ;lg  = log --pretty=tformat:'%h %ai %an -> %d %s'
    ;dfnp = !git --no-pager diff
    ;fuckoff = clean -fdx
    ;see = "!f() { git show --format=fuller \"$@\" | view - -c \"set fdm=syntax\"; }; f"
    ;fixup = commit --amend -C HEAD
    ;econf = config --global -e
    ;choosebranch = !git co "$(git branch --list --no-color | cut -c3- | egrep -v '^(resolved|parked)/' | fzf -x)"
    ;cb = !git choosebranch
    ;bs = branches
    ;graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
    ;lasttag = describe --tags --abbrev=0
    ;lt = describe --tags --abbrev=0
    ;la = "!git config -l | grep alias | cut -c 7- | showaliases -a -"
    ;meto = "!f() { : git branch ; local CURRENT=$(git rev-parse --abbrev-ref HEAD); git checkout $1; git merge $CURRENT; }; f"
    ;# Choose files
    ;cf = !tig status
    gvdiff = "!f() { git diff \"$@\" | gvim - +'se ro ft=git'; }; f"
    mtv = mergetool -t gvimdiff
    ;pms = ci -a -m 'POOR MAN STASH'
    ;upstream = !git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null
    ;fchanged = !git diff --name-only $(git upstream)
    unstash = stash pop
	unstage = "reset HEAD -- "

;[push]
    ;default = simple


[color "status"]
    added = "green normal bold"
    changed = "red normal bold"
    untracked = "magenta normal bold"
    header = "cyan normal dim"
    branch = "normal normal bold"

[merge]
    tool = meld

[mergetool "meld"]
    ; Choose one of these 2 lines (not both!) explained below.
    cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED" # auto-merged file in middle
    ;cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED" # common ancestor in middle

;[http "https://rmc-github.robotic.dlr.de"]
    ;proxy = socks5h://127.0.0.1:30000
[init]
	defaultBranch = master
[cola]
	spellcheck = false
[core]
	pager = less -FRXS
[diff]
	submodule = log
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[safe]
	directory = /opt/rmc-build-tools/any/cissy2
